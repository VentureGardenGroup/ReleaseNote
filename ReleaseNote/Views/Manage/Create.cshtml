@model ReleaseNote.Models.Project

@{
    ViewBag.Title = "Create";
}

<h2>New Project</h2>
<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@using (Html.BeginForm()) 
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        
        @Html.ValidationSummary(true)

        <div class="form-group">
            @Html.LabelFor(model => model.Name, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Name)
                @Html.ValidationMessageFor(model => model.Name)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Jira, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <select name="Jira" required id="Jira" data-bind="value:$root.selectedState,options: $root.jiraProjects(),optionsText: 'name', optionsValue: 'key',optionsCaption: '<select>', optionsAfterRender: $root.render"></select>
                @Html.ValidationMessageFor(model => model.Jira)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Octopus, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <select name="Octopus" required id="Octopus" data-bind="value:$root.selectedState,options: $root.octopusProjects(),optionsText: 'Name', optionsValue: 'Id',optionsCaption: '<select>', optionsAfterRender: $root.render"></select>
                @Html.ValidationMessageFor(model => model.Octopus)
            </div>
        </div>
        
        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </div>
    </div>
}



@section Scripts {

    @Scripts.Render("~/bundles/jqueryval")
    @Scripts.Render("~/bundles/knockout")
    <script type="text/javascript">
       var jiraProject = "@Model.Jira";
        var octopusProject = "@Model.Octopus";
        var ViewModel = function() {
            var self = this;

            self.jiraProjects = ko.observableArray([]);
            self.octopusProjects = ko.observableArray([]);
            self.jiraProject = ko.observable(jiraProject);
            self.octopusProject = ko.observable(octopusProject);

            $.getJSON("@Url.Action("Jira","Project")", function (data) {
                console.log(data);
                self.jiraProjects(data.projects);
            });
            $.getJSON("@Url.Action("Octopus","Project")", function (data) {
                console.log(data);
                self.octopusProjects(data.projects);
            });
            self.render = function () {
                $('select').material_select();
            }
        };
        ko.applyBindings(new ViewModel());
    </script>
}
